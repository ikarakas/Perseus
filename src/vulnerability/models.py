# Â© NATO Airborne Early Warning and Control Force - Licensed under NFCL v1.0
"""
Vulnerability data models
"""

from enum import Enum
from typing import List, Optional, Dict, Any
from datetime import datetime, timezone
from pydantic import BaseModel, Field

class VulnerabilitySeverity(str, Enum):
    """Vulnerability severity levels"""
    CRITICAL = "critical"
    HIGH = "high"
    MEDIUM = "medium"
    LOW = "low"
    NONE = "none"
    UNKNOWN = "unknown"

class CVSS(BaseModel):
    """Common Vulnerability Scoring System data"""
    version: str = Field(description="CVSS version (2.0, 3.0, 3.1)")
    vector_string: Optional[str] = Field(default=None, description="CVSS vector string")
    base_score: float = Field(description="Base CVSS score (0.0-10.0)")
    severity: VulnerabilitySeverity = Field(description="Severity rating")
    
    # Additional CVSS metrics
    impact_score: Optional[float] = Field(default=None, description="Impact subscore")
    exploitability_score: Optional[float] = Field(default=None, description="Exploitability subscore")
    
    # CVSS v3 specific metrics
    attack_vector: Optional[str] = Field(default=None, description="Attack Vector (AV)")
    attack_complexity: Optional[str] = Field(default=None, description="Attack Complexity (AC)")
    privileges_required: Optional[str] = Field(default=None, description="Privileges Required (PR)")
    user_interaction: Optional[str] = Field(default=None, description="User Interaction (UI)")
    scope: Optional[str] = Field(default=None, description="Scope (S)")
    confidentiality_impact: Optional[str] = Field(default=None, description="Confidentiality Impact (C)")
    integrity_impact: Optional[str] = Field(default=None, description="Integrity Impact (I)")
    availability_impact: Optional[str] = Field(default=None, description="Availability Impact (A)")

class ExploitInfo(BaseModel):
    """Exploit information for a vulnerability"""
    exploitability: Optional[str] = Field(default=None, description="Exploitability status")
    exploit_available: Optional[bool] = Field(default=None, description="Whether exploit is publicly available")
    exploit_type: Optional[str] = Field(default=None, description="Type of exploit")
    exploit_maturity: Optional[str] = Field(default=None, description="Exploit maturity level")

class Patch(BaseModel):
    """Patch information"""
    version: str = Field(description="Fixed version")
    release_date: Optional[datetime] = Field(default=None, description="Patch release date")
    url: Optional[str] = Field(default=None, description="Patch download URL")

class Advisory(BaseModel):
    """Security advisory information"""
    source: str = Field(description="Advisory source (NVD, GitHub, vendor, etc.)")
    url: str = Field(description="Advisory URL")
    severity: Optional[VulnerabilitySeverity] = Field(default=None, description="Advisory-specific severity")
    title: Optional[str] = Field(default=None, description="Advisory title")

class Vulnerability(BaseModel):
    """Enhanced vulnerability information with detailed CVE data"""
    id: str = Field(description="Vulnerability identifier (CVE, GHSA, etc.)")
    title: Optional[str] = Field(default=None, description="Vulnerability title")
    description: Optional[str] = Field(default=None, description="Detailed description")
    severity: VulnerabilitySeverity = Field(description="Overall severity")
    cvss: Optional[CVSS] = Field(default=None, description="CVSS scoring data")
    cwe_ids: List[str] = Field(default_factory=list, description="Related CWE identifiers")
    published: Optional[datetime] = Field(default=None, description="Publication date")
    updated: Optional[datetime] = Field(default=None, description="Last update date")
    references: List[str] = Field(default_factory=list, description="Reference URLs")
    affected_versions: List[str] = Field(default_factory=list, description="Affected version ranges")
    fixed_versions: List[str] = Field(default_factory=list, description="Fixed version numbers")
    
    # Enhanced CVE information
    aliases: List[str] = Field(default_factory=list, description="Alternative identifiers (CVE aliases)")
    exploit_info: Optional[ExploitInfo] = Field(default=None, description="Exploit availability information")
    patches: List[Patch] = Field(default_factory=list, description="Available patches")
    advisories: List[Advisory] = Field(default_factory=list, description="Security advisories")
    
    # Additional metadata
    affected_platforms: List[str] = Field(default_factory=list, description="Affected platforms/architectures")
    affected_products: List[Dict[str, Any]] = Field(default_factory=list, description="Affected products with versions")
    mitigation: Optional[str] = Field(default=None, description="Mitigation strategies")
    technical_details: Optional[str] = Field(default=None, description="Technical vulnerability details")
    source_data: Optional[Dict[str, Any]] = Field(default=None, description="Raw source data from scanner")
    
class ComponentVulnerabilities(BaseModel):
    """Vulnerabilities for a specific component"""
    component_name: str = Field(description="Component name")
    component_version: Optional[str] = Field(description="Component version")
    purl: Optional[str] = Field(description="Package URL")
    vulnerabilities: List[Vulnerability] = Field(description="List of vulnerabilities")
    scan_date: datetime = Field(default_factory=lambda: datetime.now(timezone.utc), description="When the scan was performed")