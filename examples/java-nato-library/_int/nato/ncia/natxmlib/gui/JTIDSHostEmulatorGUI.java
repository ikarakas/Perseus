/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package _int.nato.ncia.natxmlib.gui;

import _int.nato.ncia.natxmlib.test.JTIDSHostEmulator;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author mike
 */
public class JTIDSHostEmulatorGUI extends javax.swing.JFrame {
    protected final JTIDSHostEmulator jtidsHostEmulator;
    
    public JTIDSHostEmulatorGUI(JTIDSHostEmulator jtidsHostEmulator) {
        
        this.jtidsHostEmulator=jtidsHostEmulator;
        
        initComponents();
        updateUI();
        Timer t=new Timer(500, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                updateUI();
            }
        });
        t.setRepeats(true);
        t.start();
        
    }
    protected final void updateUI() {
        tfTerminalTime.setText(jtidsHostEmulator.controller.getTerminalTime());
        tfTerminalStatus.setText(jtidsHostEmulator.controller.getTerminalStatus());
        tfSyncStatus.setText(jtidsHostEmulator.controller.getSyncStatus());
        cbInitDataComplete.setSelected(jtidsHostEmulator.controller.isInitializationComplete());
        cbInitDataRequired.setSelected(jtidsHostEmulator.controller.isInitDataRequired());
        cbInitDataConflict.setSelected(jtidsHostEmulator.controller.isInitDataConflict());
        cbInitDataError.setSelected(jtidsHostEmulator.controller.isInitDataError());
        cbSDUAlert.setSelected(jtidsHostEmulator.controller.isSDUAlert());
        cbTerminalFail.setSelected(jtidsHostEmulator.controller.isTerminalFail());
        cbIPFFail.setSelected(jtidsHostEmulator.controller.isIPFFail());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnLoadComplete = new javax.swing.JButton();
        btnRestartLoadDefaults = new javax.swing.JButton();
        btnRestartLoadCurrent = new javax.swing.JButton();
        btnTransferInitData = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        tfSyncStatus = new javax.swing.JTextField();
        tfTerminalStatus = new javax.swing.JTextField();
        tfTerminalTime = new javax.swing.JTextField();
        tfNETTime = new javax.swing.JTextField();
        tfTerminalDate = new javax.swing.JTextField();
        cbIsETR = new javax.swing.JCheckBox();
        cbIsNTR = new javax.swing.JCheckBox();
        cbIsETROK = new javax.swing.JCheckBox();
        cbInitDataConflict = new javax.swing.JCheckBox();
        cbInitDataComplete = new javax.swing.JCheckBox();
        cbInitDataRequired = new javax.swing.JCheckBox();
        cbInitDataError = new javax.swing.JCheckBox();
        cbSDUAlert = new javax.swing.JCheckBox();
        cbTerminalFail = new javax.swing.JCheckBox();
        cbIPFFail = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        cbNTR = new javax.swing.JCheckBox();
        cbETR = new javax.swing.JCheckBox();
        btnNetEntryReset = new javax.swing.JButton();
        cbSetTime = new javax.swing.JCheckBox();
        tbTransmitTIM03s = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JTIDS Host Emulator");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnLoadComplete.setText("Load Complete");
        btnLoadComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadCompleteActionPerformed(evt);
            }
        });

        btnRestartLoadDefaults.setText("Restart Load (default)");
        btnRestartLoadDefaults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestartLoadDefaultsActionPerformed(evt);
            }
        });

        btnRestartLoadCurrent.setText("Restart Load (current)");
        btnRestartLoadCurrent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestartLoadCurrentActionPerformed(evt);
            }
        });

        btnTransferInitData.setText("Transfer Init Data");
        btnTransferInitData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransferInitDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRestartLoadCurrent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRestartLoadDefaults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLoadComplete, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTransferInitData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnLoadComplete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRestartLoadDefaults)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRestartLoadCurrent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTransferInitData)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tfSyncStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSyncStatusActionPerformed(evt);
            }
        });

        tfTerminalStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTerminalStatusActionPerformed(evt);
            }
        });

        tfTerminalTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTerminalTimeActionPerformed(evt);
            }
        });

        tfNETTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNETTimeActionPerformed(evt);
            }
        });

        tfTerminalDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTerminalDateActionPerformed(evt);
            }
        });

        cbIsETR.setText("is ETR");
        cbIsETR.setEnabled(false);

        cbIsNTR.setText("is NTR");
        cbIsNTR.setEnabled(false);

        cbIsETROK.setText("ETR OK");
        cbIsETROK.setEnabled(false);

        cbInitDataConflict.setText("ID conflict");
        cbInitDataConflict.setEnabled(false);

        cbInitDataComplete.setText("ID complete");
        cbInitDataComplete.setEnabled(false);

        cbInitDataRequired.setText("ID required");
        cbInitDataRequired.setEnabled(false);

        cbInitDataError.setText("ID Error");
        cbInitDataError.setEnabled(false);

        cbSDUAlert.setText("SDU Alert");
        cbSDUAlert.setEnabled(false);

        cbTerminalFail.setText("Terminal Fail");
        cbTerminalFail.setEnabled(false);

        cbIPFFail.setText("IPF Fail");
        cbIPFFail.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfTerminalStatus, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfSyncStatus, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfNETTime, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(203, 203, 203))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(tfTerminalTime, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfTerminalDate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(cbInitDataComplete)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cbInitDataConflict)
                                    .addGap(33, 33, 33)
                                    .addComponent(cbInitDataRequired)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cbInitDataError))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(cbIsNTR)
                                            .addGap(18, 18, 18)
                                            .addComponent(cbIsETR)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(cbIsETROK))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(cbSDUAlert)
                                            .addGap(26, 26, 26)
                                            .addComponent(cbTerminalFail)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(cbIPFFail)))
                                    .addGap(104, 104, 104))))
                        .addGap(0, 42, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(tfTerminalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfSyncStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTerminalTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTerminalDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfNETTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbIsNTR)
                    .addComponent(cbIsETR)
                    .addComponent(cbIsETROK))
                .addGap(57, 57, 57)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbInitDataComplete)
                    .addComponent(cbInitDataConflict)
                    .addComponent(cbInitDataRequired)
                    .addComponent(cbInitDataError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSDUAlert)
                    .addComponent(cbTerminalFail)
                    .addComponent(cbIPFFail))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbNTR.setText("NTR");

        cbETR.setText("ETR");

        btnNetEntryReset.setText("Net Entry Reset");
        btnNetEntryReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNetEntryResetActionPerformed(evt);
            }
        });

        cbSetTime.setText("SET TIME");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbETR)
                            .addComponent(cbNTR))
                        .addGap(26, 26, 26)
                        .addComponent(cbSetTime))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(btnNetEntryReset, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbNTR)
                    .addComponent(cbSetTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbETR)
                .addGap(18, 18, 18)
                .addComponent(btnNetEntryReset)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        tbTransmitTIM03s.setText("Transmit TIM3s");
        tbTransmitTIM03s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbTransmitTIM03sActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tbTransmitTIM03s)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tbTransmitTIM03s)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfSyncStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSyncStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSyncStatusActionPerformed

    private void tfTerminalStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTerminalStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTerminalStatusActionPerformed

    private void btnNetEntryResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNetEntryResetActionPerformed
        jtidsHostEmulator.controller.doNetEntryReset(cbNTR.isSelected(),cbETR.isSelected());
    }//GEN-LAST:event_btnNetEntryResetActionPerformed

    private void tfTerminalTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTerminalTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTerminalTimeActionPerformed

    private void tfNETTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNETTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNETTimeActionPerformed

    private void tfTerminalDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTerminalDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTerminalDateActionPerformed

    private void btnRestartLoadCurrentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestartLoadCurrentActionPerformed
        jtidsHostEmulator.controller.doRestartLoadCurrent();
    }//GEN-LAST:event_btnRestartLoadCurrentActionPerformed

    private void btnRestartLoadDefaultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestartLoadDefaultsActionPerformed
        jtidsHostEmulator.controller.doRestartLoadDefault();
    }//GEN-LAST:event_btnRestartLoadDefaultsActionPerformed

    private void btnLoadCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadCompleteActionPerformed
        jtidsHostEmulator.controller.doLoadComplete();
    }//GEN-LAST:event_btnLoadCompleteActionPerformed

    private void btnTransferInitDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransferInitDataActionPerformed
        jtidsHostEmulator.controller.doTransferInitData();
    }//GEN-LAST:event_btnTransferInitDataActionPerformed

    private void tbTransmitTIM03sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbTransmitTIM03sActionPerformed
        jtidsHostEmulator.controller.doTransferL16(tbTransmitTIM03s.isSelected());
    }//GEN-LAST:event_tbTransmitTIM03sActionPerformed

    /**
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MIDSGatewayGUI().setVisible(true);
            }
        });
    }
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoadComplete;
    private javax.swing.JButton btnNetEntryReset;
    private javax.swing.JButton btnRestartLoadCurrent;
    private javax.swing.JButton btnRestartLoadDefaults;
    private javax.swing.JButton btnTransferInitData;
    private javax.swing.JCheckBox cbETR;
    private javax.swing.JCheckBox cbIPFFail;
    private javax.swing.JCheckBox cbInitDataComplete;
    private javax.swing.JCheckBox cbInitDataConflict;
    private javax.swing.JCheckBox cbInitDataError;
    private javax.swing.JCheckBox cbInitDataRequired;
    private javax.swing.JCheckBox cbIsETR;
    private javax.swing.JCheckBox cbIsETROK;
    private javax.swing.JCheckBox cbIsNTR;
    private javax.swing.JCheckBox cbNTR;
    private javax.swing.JCheckBox cbSDUAlert;
    private javax.swing.JCheckBox cbSetTime;
    private javax.swing.JCheckBox cbTerminalFail;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JToggleButton tbTransmitTIM03s;
    private javax.swing.JTextField tfNETTime;
    private javax.swing.JTextField tfSyncStatus;
    private javax.swing.JTextField tfTerminalDate;
    private javax.swing.JTextField tfTerminalStatus;
    private javax.swing.JTextField tfTerminalTime;
    // End of variables declaration//GEN-END:variables
}
