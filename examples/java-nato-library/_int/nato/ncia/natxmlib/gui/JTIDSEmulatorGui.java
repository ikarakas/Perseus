/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package _int.nato.ncia.natxmlib.gui;

import _int.nato.ncia.natxmlib.fields.TimeStamp;
import _int.nato.ncia.natxmlib.messages.tom4.NATOM04;
import _int.nato.ncia.natxmlib.test.JTIDSEmulator;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author mike
 */
public class JTIDSEmulatorGui extends javax.swing.JFrame {

    /**
     * Creates new form JTIDSEmulatorGui
     */
    protected final JTIDSEmulator emulator;
    public JTIDSEmulatorGui(JTIDSEmulator emulator) {
        this.emulator=emulator;
        initComponents();
        JTIDSEmulator.JTIDSTerminalStatus jts= emulator.getJTIDSTerminalStatus();
        cbNetEntryState.setSelectedIndex(jts.getSyncStatus().ordinal());
        cbInitDataComplete.setSelected(jts.isInitDataComplete());
        cbInitDataRequired.setSelected(jts.isInitDataRequired());
        cbInitDataError.setSelected(jts.isInitDataError());
        cbInitDataConflict.setSelected(jts.isInitDataConflict());
        cbSDUAlert.setSelected(jts.isSduAlert());
        cbTerminalFail.setSelected(jts.isTerminalFail());
        cbIPFFail.setSelected(jts.isIpfFail());
        updateUI();
        Timer t=new Timer(500, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                updateUI();
            }
        });
        t.setRepeats(true);
        t.start();        
    }
    public final void updateUI() {
        tfHosttime.setText(emulator.jtidsEmulatorController.getHostTime());
        tfTerminalTime.setText(emulator.jtidsEmulatorController.getTerminalTime());
        tfLinkStatus.setText(emulator.jtidsEmulatorController.getLinkState());
        cbNERrequested.setSelected(emulator.jtidsEmulatorController.isNetEntryReset());
        cbLoadCompleteDeclared.setSelected(emulator.jtidsEmulatorController.isLoadCompleteDeclared());
        cbLoadCurrentRequested.setSelected(emulator.jtidsEmulatorController.isLoadCurrentRequested());
        cbLoadDefaultsRequested.setSelected(emulator.jtidsEmulatorController.isLoadDefaultsRequested());
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbHosttime = new javax.swing.JLabel();
        tfHosttime = new javax.swing.JTextField();
        lbHosttime1 = new javax.swing.JLabel();
        tfLinkStatus = new javax.swing.JTextField();
        cbNERrequested = new javax.swing.JCheckBox();
        cbLoadCurrentRequested = new javax.swing.JCheckBox();
        cbLoadDefaultsRequested = new javax.swing.JCheckBox();
        cbLoadCompleteDeclared = new javax.swing.JCheckBox();
        tbPauseEmulator = new javax.swing.JToggleButton();
        lbTerminalTime = new javax.swing.JLabel();
        tfTerminalTime = new javax.swing.JTextField();
        btnStoreInitData = new javax.swing.JButton();
        btnLoadInitData = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cbNetEntryState = new javax.swing.JComboBox<>();
        lbNetentryState = new javax.swing.JLabel();
        btnApply = new javax.swing.JButton();
        cbInitDataComplete = new javax.swing.JCheckBox();
        cbInitDataRequired = new javax.swing.JCheckBox();
        cbInitDataError = new javax.swing.JCheckBox();
        cbInitDataConflict = new javax.swing.JCheckBox();
        cbSDUAlert = new javax.swing.JCheckBox();
        cbTerminalFail = new javax.swing.JCheckBox();
        cbIPFFail = new javax.swing.JCheckBox();
        cbUserRefresh = new javax.swing.JCheckBox();
        cbAOCPInitRequest = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JTIDS Emulator");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbHosttime.setText("Host Time");

        tfHosttime.setEditable(false);

        lbHosttime1.setText("Link Status");

        tfLinkStatus.setEditable(false);

        cbNERrequested.setText("Net Entry Reset requested");
        cbNERrequested.setEnabled(false);

        cbLoadCurrentRequested.setText("Load Current requested");
        cbLoadCurrentRequested.setEnabled(false);

        cbLoadDefaultsRequested.setText("Load Defaults requested");
        cbLoadDefaultsRequested.setEnabled(false);

        cbLoadCompleteDeclared.setText("Load Complete declared");
        cbLoadCompleteDeclared.setEnabled(false);

        tbPauseEmulator.setText("Pause Emulator");
        tbPauseEmulator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbPauseEmulatorActionPerformed(evt);
            }
        });

        lbTerminalTime.setText("Terminal Time");

        tfTerminalTime.setEditable(false);

        btnStoreInitData.setText("Store Init Data");
        btnStoreInitData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStoreInitDataActionPerformed(evt);
            }
        });

        btnLoadInitData.setText("Load Init Data");
        btnLoadInitData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadInitDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cbLoadCurrentRequested, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbNERrequested, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbLoadDefaultsRequested, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbLoadCompleteDeclared, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(lbHosttime1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfLinkStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lbTerminalTime, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfTerminalTime, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lbHosttime, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfHosttime, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(tbPauseEmulator))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnStoreInitData, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLoadInitData, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbHosttime1)
                    .addComponent(tfLinkStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbHosttime)
                    .addComponent(tfHosttime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTerminalTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTerminalTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(cbNERrequested)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbLoadCurrentRequested)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbLoadDefaultsRequested)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbLoadCompleteDeclared)
                .addGap(30, 30, 30)
                .addComponent(tbPauseEmulator)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStoreInitData)
                    .addComponent(btnLoadInitData))
                .addGap(111, 111, 111))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbNetEntryState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not in progress", "Coarse Sync in progress", "Coarse Sync achieved", "Fine Sync achieved" }));

        lbNetentryState.setText("Netentry State");

        btnApply.setText("Apply");
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });

        cbInitDataComplete.setText("Init Data Complete  ");
        cbInitDataComplete.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        cbInitDataComplete.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        cbInitDataRequired.setText("Init Data Required   ");
        cbInitDataRequired.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        cbInitDataRequired.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        cbInitDataError.setText("Init Data Error");
        cbInitDataError.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        cbInitDataError.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        cbInitDataConflict.setText("Init Data Conflict");
        cbInitDataConflict.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        cbInitDataConflict.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        cbSDUAlert.setText("SDU Alert");
        cbSDUAlert.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        cbSDUAlert.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        cbTerminalFail.setText("Terminal Fail");
        cbTerminalFail.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        cbTerminalFail.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        cbIPFFail.setText("IPF Fail");
        cbIPFFail.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        cbIPFFail.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        cbUserRefresh.setText("User Refresh");
        cbUserRefresh.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        cbUserRefresh.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        cbAOCPInitRequest.setText("AOCP InitData Request");
        cbAOCPInitRequest.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        cbAOCPInitRequest.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 45, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbInitDataConflict, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbInitDataError, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbTerminalFail, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lbNetentryState, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(cbNetEntryState, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(16, 16, 16))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cbInitDataComplete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(cbInitDataRequired, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbSDUAlert, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbIPFFail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbUserRefresh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(cbAOCPInitRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnApply)
                .addGap(147, 147, 147))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbNetEntryState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNetentryState))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbInitDataComplete)
                    .addComponent(cbInitDataError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbInitDataConflict)
                    .addComponent(cbInitDataRequired))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSDUAlert)
                    .addComponent(cbTerminalFail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbIPFFail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbUserRefresh)
                    .addComponent(cbAOCPInitRequest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnApply)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        JTIDSEmulator.JTIDSTerminalStatus jts= emulator.getJTIDSTerminalStatus();
        jts.setInitDataComplete(cbInitDataComplete.isSelected());
        jts.setInitDataRequired(cbInitDataRequired.isSelected());
        jts.setInitDataError(cbInitDataError.isSelected());
        jts.setInitDataConflict(cbInitDataConflict.isSelected());
        jts.setSduAlert(cbSDUAlert.isSelected());
        jts.setTerminalFail(cbTerminalFail.isSelected());
        jts.setIpfFail(cbIPFFail.isSelected());
        jts.setUserRefresh(cbUserRefresh.isSelected());
        jts.setAocpInitRequest(cbAOCPInitRequest.isSelected());
        int idx=cbNetEntryState.getSelectedIndex();
        if((idx>=0) && (idx<=3)) {
            emulator.jtidsEmulatorController.setSyncState(NATOM04.SyncStatus.values()[idx]);
        }
        jts.apply();
    }//GEN-LAST:event_btnApplyActionPerformed

    private void tbPauseEmulatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbPauseEmulatorActionPerformed
         emulator.jtidsEmulatorController.doPauseOutput(tbPauseEmulator.isSelected());
    }//GEN-LAST:event_tbPauseEmulatorActionPerformed

    private void btnLoadInitDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadInitDataActionPerformed
        emulator.jtidsEmulatorController.doLoadInitData();
    }//GEN-LAST:event_btnLoadInitDataActionPerformed

    private void btnStoreInitDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStoreInitDataActionPerformed
       emulator.jtidsEmulatorController.doStoreInitData();
    }//GEN-LAST:event_btnStoreInitDataActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApply;
    private javax.swing.JButton btnLoadInitData;
    private javax.swing.JButton btnStoreInitData;
    private javax.swing.JCheckBox cbAOCPInitRequest;
    private javax.swing.JCheckBox cbIPFFail;
    private javax.swing.JCheckBox cbInitDataComplete;
    private javax.swing.JCheckBox cbInitDataConflict;
    private javax.swing.JCheckBox cbInitDataError;
    private javax.swing.JCheckBox cbInitDataRequired;
    private javax.swing.JCheckBox cbLoadCompleteDeclared;
    private javax.swing.JCheckBox cbLoadCurrentRequested;
    private javax.swing.JCheckBox cbLoadDefaultsRequested;
    private javax.swing.JCheckBox cbNERrequested;
    private javax.swing.JComboBox<String> cbNetEntryState;
    private javax.swing.JCheckBox cbSDUAlert;
    private javax.swing.JCheckBox cbTerminalFail;
    private javax.swing.JCheckBox cbUserRefresh;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbHosttime;
    private javax.swing.JLabel lbHosttime1;
    private javax.swing.JLabel lbNetentryState;
    private javax.swing.JLabel lbTerminalTime;
    private javax.swing.JToggleButton tbPauseEmulator;
    private javax.swing.JTextField tfHosttime;
    private javax.swing.JTextField tfLinkStatus;
    private javax.swing.JTextField tfTerminalTime;
    // End of variables declaration//GEN-END:variables
}
